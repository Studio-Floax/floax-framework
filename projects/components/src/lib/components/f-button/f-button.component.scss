@import "src/styles/main";

// Variables
$button-padding: 5px;
$icon-margin: 20%;

// Mixins
@mixin btn-type($color) {
    &.fill-fill,
    &.fill-border,
    &.fill-ghost {
        background-color: $color;
        border: 1px solid $color;
        transition: 0.3s ease-in-out;

        &:hover {
            background-color: transparent;
            cursor: pointer;
            transition: 0.3s ease-in-out;
        }

        &:focus {
            background-color: $color;
            transition: 0.3s ease-in-out;
        }

        &:active {
            background-color: $color;
            transition: 0.3 ease-in-out;
        }
    }

    &.fill-border {
        background-color: transparent;
        color: $color;
        transition: 0.3s ease-in-out;

        &:hover {
            background-color: $color;
            color: color($colors, neutral, 100);
            transition: 0.3s ease-in-out;
        }

        &:active {
            background-color: transparent;
            transition: 0.3s ease-in-out;
        }
    }

    &.fill-ghost {
        background-color: transparent;
        border: 1px solid transparent;
        color: $color;
        transition: 0.3s ease-in-out;

        &:hover {
            border: 1px solid $color;
            cursor: pointer;
            transition: 0.3s ease-in-out;
        }

        &:focus {
            border: 1px solid $color;
            transition: 0.3s ease-in-out;
        }

        &:active {
            background-color: $color;
            transition: 0.3s ease-in-out;
        }
    }
}

@mixin btn-text($color) {
    & {
        color: $color;

        &:hover {
            color: black;
        }
    }
};

@mixin btn-size($padding, $font) {
    font-size: $font;
    padding: $padding;
    width: auto;
}

@mixin btn-colors() {
    @each $color in $colors {
        @each $light in nth($color, 2) {
            &.btn-#{nth($color, 1)}-#{nth($light, 1)}{
                @include btn-type(color($colors, nth($color, 1), nth($light, 1)));
            }
        }
    }

    @each $color in $colors {
        @each $light in nth($color, 2) {
            &.color-#{nth($color, 1)}-#{nth($light, 1)}{
                @include btn-text(color($colors, nth($color, 1), nth($light, 1)));
            }
        }
    }
}

:host ::ng-deep .icon-start {
    margin-right: 5px;
}

:host ::ng-deep .icon-end {
    margin-left: 5px;
}

// Properties
button {
    &.btn {
        align-items: center;
        display: flex;
        justify-content: center;

        border: none;
        border-radius: 3px;

        color: color($colors, neutral, 100);

        font-size: 1.3rem;
        font-weight: 200;

        padding-inline: $button-padding;

        @include btn-type(color($colors, neutral, 400));

        &:hover {
            color: color($colors, neutral, 900);
        }
    }

    @include btn-colors();

    // Button Size
    &.size-s {
        @include btn-size(0 10px, 12px);
    }

    &.size-m {
        @include btn-size(5px 15px, 14px);
    }

    &.size-l {
        @include btn-size(10px 20px, 16px);
    }
}
